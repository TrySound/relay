// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches expected output: arguments.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const RelayCompatContainer = require('RelayCompatContainer');
const graphql = require('graphql');

const CompatProfilePic = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfilePic, {
  passing: graphql\`
    fragment CompatProfile_passing on User {
      ...ProfilePic_user @arguments(size: 40, scale: 1.5, title: "Photo")
      ...ProfilePic_user @arguments(size: $pictureSize)
    }
  \`,
  receiving: graphql\`
    fragment CompatProfile_receiving on User @argumentDefinitions(
      first: {type: "Int", defaultValue: 5}
      named: {type: "String", defaultValue: "john"}
      scale: {type: "Float", defaultValue: 1.5}
      noDefault: {type: "Int"}
    ) {
      friends(first: $first, named: $named, scale: $scale) {
        count
      }
    }
  \`,
  receivingGlobals: graphql\`
    fragment CompatProfile_receivingGlobals on User {
      friends(first: $friendsCount) {
        count
      }
    }
  \`,
});

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

import __relay_generated_CompatProfile_receivingGlobals__ from "./__generated__/CompatProfile_receivingGlobals.graphql";
import __relay_generated_CompatProfile_receiving__ from "./__generated__/CompatProfile_receiving.graphql";
import __relay_generated_CompatProfile_passing__ from "./__generated__/CompatProfile_passing.graphql";

const RelayCompatContainer = require('RelayCompatContainer');

const graphql = require('graphql');

const CompatProfilePic = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfilePic, {
  passing: function () {
    return __relay_generated_CompatProfile_passing__;
  },
  receiving: function () {
    return __relay_generated_CompatProfile_receiving__;
  },
  receivingGlobals: function () {
    return __relay_generated_CompatProfile_receivingGlobals__;
  }
});
`;

exports[`matches expected output: arguments-listvalue.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 */

'use strict';

const RelayClassic = require('react-relay/classic');

const {graphql} = RelayClassic;

const CompatProfile = () => null;

module.exports = RelayClassic.createFragmentContainer(CompatProfile, {
  viewer: graphql\`
    fragment CompatProfile_viewer on Viewer @argumentDefinitions(
      browserContext: {type: "MarketplaceBrowseContext", defaultValue: BROWSE_FEED}
      priceRange: {type: "[Float]", defaultValue: [0, 50]}
    ) {
      marketplace_explore(
        marketplace_browse_context: $browserContext,
        with_price_between: $priceRange,
      ) {
        count
      }
    }
  \`
});

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 */
'use strict';

import __relay_generated_CompatProfile_viewer__ from "./__generated__/CompatProfile_viewer.graphql";

const RelayClassic = require('react-relay/classic');

const {
  graphql
} = RelayClassic;

const CompatProfile = () => null;

module.exports = RelayClassic.createFragmentContainer(CompatProfile, {
  viewer: function () {
    return __relay_generated_CompatProfile_viewer__;
  }
});
`;

exports[`matches expected output: duplicate-variables.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const RelayCompatContainer = require('RelayCompatContainer');
const graphql = require('graphql');

const CompatProfilePic = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfilePic, {
  user: graphql\`
    fragment CompatProfile_user on User @argumentDefinitions(
     scale: {type: "Float"}
    ) {
      profile_picture(scale: $scale) {
        uri
      }
    }
  \`,
  user2: graphql\`
    fragment CompatProfile_user2 on User @argumentDefinitions(
     scale: {type: "Float"}
    ) {
      profile_picture(scale: $scale) {
        uri
      }
    }
  \`
});

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

import __relay_generated_CompatProfile_user2__ from "./__generated__/CompatProfile_user2.graphql";
import __relay_generated_CompatProfile_user__ from "./__generated__/CompatProfile_user.graphql";

const RelayCompatContainer = require('RelayCompatContainer');

const graphql = require('graphql');

const CompatProfilePic = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfilePic, {
  user: function () {
    return __relay_generated_CompatProfile_user__;
  },
  user2: function () {
    return __relay_generated_CompatProfile_user2__;
  }
});
`;

exports[`matches expected output: error_too-many-fragments.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const RelayCompatContainer = require('RelayCompatContainer');
const graphql = require('graphql');

const CompatProfile = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfile, {
  user: graphql\`
    fragment CompatProfile_user on User {
      name
    }

    fragment CompatProfile_viewer on User {
      name
    }
  \`,
});

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
ERROR:

Error: BabelPluginRelay: Expected exactly one definition per graphql tag.
`;

exports[`matches expected output: error_unexpected-fragment.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const graphql = require('graphql');
const CompatProfilePic = require('CompatProfilePic');

const CompatCommentCreateMutation = graphql\`
  mutation CompatCommentCreateMutation($input: CommentCreateInput!) {
    commentCreate(input: $input) {
      viewer {
        actor {
          id
          ...CompatProfilePic_user
        }
      }
    }
  }

  fragment Whoopsie_key on User {
    name
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
ERROR:

Error: BabelPluginRelay: Expected exactly one definition per graphql tag.
`;

exports[`matches expected output: error_unexpected-operation.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const RelayCompatContainer = require('RelayCompatContainer');
const graphql = require('graphql');

const CompatProfile = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfile, graphql\`
  fragment CompatProfile_user on User {
    name
  }

  query Whoopsie {
    name
  }
\`);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
ERROR:

Error: BabelPluginRelay: Expected exactly one definition per graphql tag.
`;

exports[`matches expected output: export-refetch-container.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

const React = require('react');
const {createRefetchContainer, graphql} = require('react-relay/classic');

class RefetchExample extends React.Component {
  render() {
    return <div>{this.props.user.name}</div>;
  }
}

module.exports = createRefetchContainer(
  RefetchExample,
  {
    user: graphql\`
      fragment RefetchExample_user on User {
        name
      }
    \`
  },
  graphql\`
    query RefetchExampleRefetchQuery {
      viewer {
        actor {
          ...RefetchExample_user
        }
      }
    }
  \`,
);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
import __relay_generated_RefetchExampleRefetchQuery__ from "./__generated__/RefetchExampleRefetchQuery.graphql";
import __relay_generated_RefetchExample_user__ from "./__generated__/RefetchExample_user.graphql";

/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
const React = require('react');

const {
  createRefetchContainer,
  graphql
} = require('react-relay/classic');

class RefetchExample extends React.Component {
  render() {
    return <div>{this.props.user.name}</div>;
  }

}

module.exports = createRefetchContainer(RefetchExample, {
  user: function () {
    return __relay_generated_RefetchExample_user__;
  }
}, function () {
  return __relay_generated_RefetchExampleRefetchQuery__;
});
`;

exports[`matches expected output: fragment-spread.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const CompatProfilePic = require('CompatProfilePic');
const RelayCompatContainer = require('RelayCompatContainer');
const graphql = require('graphql');

const CompatProfile = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfile, {
  user: graphql\`
    fragment CompatProfile_user on User {
      name
      ...CompatProfilePic_user
    }
  \`,
});

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

import __relay_generated_CompatProfile_user__ from "./__generated__/CompatProfile_user.graphql";

const CompatProfilePic = require('CompatProfilePic');

const RelayCompatContainer = require('RelayCompatContainer');

const graphql = require('graphql');

const CompatProfile = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfile, {
  user: function () {
    return __relay_generated_CompatProfile_user__;
  }
});
`;

exports[`matches expected output: inlineDirective.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 */

'use strict';

const graphql = require('graphql');

graphql\`
  fragment Test on User @inline {
    id
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 */
'use strict';

import __relay_generated_Test__ from "./__generated__/Test.graphql";

const graphql = require('graphql');

(function () {
  return __relay_generated_Test__;
});
`;

exports[`matches expected output: memoize-inner-scope.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const ProfilePic = require('ProfilePic');

function SomeTopLevelView() {
  let _graphql = 'unrelated';

  return (
    <View>
      <QueryRenderer
        environment={RelayStore}
        query={graphql\`
          query ExampleQuery($id: ID!) {
            node(id: $id) {
              ...ProfilePic_user
            }
          }
        \`}
        variables={{id: '12345'}}
      />
    </View>
  );
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

var _graphql2;

import __relay_generated_ExampleQuery__ from "./__generated__/ExampleQuery.graphql";

const ProfilePic = require('ProfilePic');

function SomeTopLevelView() {
  let _graphql = 'unrelated';
  return <View>
      <QueryRenderer environment={RelayStore} query={_graphql2 || (_graphql2 = function () {
      return __relay_generated_ExampleQuery__;
    })} variables={{
      id: '12345'
    }} />
    </View>;
}
`;

exports[`matches expected output: module-operation.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const graphql = require('graphql');
const CompatProfilePic = require('CompatProfilePic');

const CompatCommentCreateMutation = graphql\`
  mutation CompatCommentCreateMutation($input: CommentCreateInput!) {
    commentCreate(input: $input) {
      viewer {
        actor {
          id
          ...CompatProfilePic_user
        }
      }
    }
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

import __relay_generated_CompatCommentCreateMutation__ from "./__generated__/CompatCommentCreateMutation.graphql";

const graphql = require('graphql');

const CompatProfilePic = require('CompatProfilePic');

const CompatCommentCreateMutation = function () {
  return __relay_generated_CompatCommentCreateMutation__;
};
`;

exports[`matches expected output: multiple-root-fields.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const graphql = require('graphql');
const CompatProfilePic = require('CompatProfilePic');

const CompatViewerQuery = graphql\`
   query CompatViewerQuery($id: ID!, $scale: Float = 1.5) {
    viewer {
      actor {
        id
        ...CompatProfilePic_user
      }
    }
    user: node(id: $id) {
      ... on User {
        id
        ...CompatProfilePic_user
      }
    }
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

import __relay_generated_CompatViewerQuery__ from "./__generated__/CompatViewerQuery.graphql";

const graphql = require('graphql');

const CompatProfilePic = require('CompatProfilePic');

const CompatViewerQuery = function () {
  return __relay_generated_CompatViewerQuery__;
};
`;

exports[`matches expected output: mutation.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const graphql = require('graphql');
const CompatProfilePic = require('CompatProfilePic');

const CompatCommentCreateMutation = graphql\`
  mutation CompatCommentCreateMutation($input: CommentCreateInput!) {
    commentCreate(input: $input) {
      viewer {
        actor {
          id
          ...CompatProfilePic_user
        }
      }
    }
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

import __relay_generated_CompatCommentCreateMutation__ from "./__generated__/CompatCommentCreateMutation.graphql";

const graphql = require('graphql');

const CompatProfilePic = require('CompatProfilePic');

const CompatCommentCreateMutation = function () {
  return __relay_generated_CompatCommentCreateMutation__;
};
`;

exports[`matches expected output: no-fragment-spread.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const RelayCompatContainer = require('RelayCompatContainer');
const graphql = require('graphql');

const CompatProfile = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfile, {
  user: graphql\`
    fragment CompatProfile_user on User {
      name
    }
  \`,
});

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

import __relay_generated_CompatProfile_user__ from "./__generated__/CompatProfile_user.graphql";

const RelayCompatContainer = require('RelayCompatContainer');

const graphql = require('graphql');

const CompatProfile = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfile, {
  user: function () {
    return __relay_generated_CompatProfile_user__;
  }
});
`;

exports[`matches expected output: query.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const graphql = require('graphql');
const CompatProfilePic = require('CompatProfilePic');

const CompatViewerQuery = graphql\`
   query CompatViewerQuery($id: ID!, $scale: Float = 1.5) {
    node(id: $id) {
      ... on User {
        id
        ...CompatProfilePic_user
      }
    }
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

import __relay_generated_CompatViewerQuery__ from "./__generated__/CompatViewerQuery.graphql";

const graphql = require('graphql');

const CompatProfilePic = require('CompatProfilePic');

const CompatViewerQuery = function () {
  return __relay_generated_CompatViewerQuery__;
};
`;

exports[`matches expected output: within-class-reference.txt 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */

'use strict';

const {createFragmentContainer, graphql} = require('react-relay/classic');
const React = require('react');
const CompatProfilePic = require('CompatProfilePic');

class CompatProfile extends React.Component {
  render() {
    return <div>
      <CompatProfilePic user={this.props.actor} />
      {this.props.actor.name}
      {this.props.actor.subscribeStatus}
    </div>;
  }

  doSomething() {
    commitMutation(
      this.props.relay,
      graphql\`
        mutation ActorSubscribe($input: ActorSubscribeInput!) {
          actorSubscribe(input: $input) {
            subscribee {
              ...CompatProfile
            }
          }
        }
      \`,
      { input: { subscribeeId: 123 } }
    )
  }
}

module.exports = createFragmentContainer(CompatProfile, {
  actor: graphql\`
    fragment CompatProfile_actor on Actor {
      name
      subscribeStatus
      ...CompatProfilePic_user
    }
  \`,
});

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 */
'use strict';

var _graphql;

import __relay_generated_CompatProfile_actor__ from "./__generated__/CompatProfile_actor.graphql";
import __relay_generated_ActorSubscribe__ from "./__generated__/ActorSubscribe.graphql";

const {
  createFragmentContainer,
  graphql
} = require('react-relay/classic');

const React = require('react');

const CompatProfilePic = require('CompatProfilePic');

class CompatProfile extends React.Component {
  render() {
    return <div>
      <CompatProfilePic user={this.props.actor} />
      {this.props.actor.name}
      {this.props.actor.subscribeStatus}
    </div>;
  }

  doSomething() {
    commitMutation(this.props.relay, _graphql || (_graphql = function () {
      return __relay_generated_ActorSubscribe__;
    }), {
      input: {
        subscribeeId: 123
      }
    });
  }

}

module.exports = createFragmentContainer(CompatProfile, {
  actor: function () {
    return __relay_generated_CompatProfile_actor__;
  }
});
`;
